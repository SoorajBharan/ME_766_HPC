digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="main\n100.00%\n(0.00%)"];
	1 -> 2 [arrowsize="0.94", color="#ee6a03", fontcolor="#ee6a03", fontsize="10.00", label="89.09%\n1×", labeldistance="3.56", penwidth="3.56"];
	1 -> 5 [arrowsize="0.35", color="#0d3f81", fontcolor="#0d3f81", fontsize="10.00", label="10.90%\n2×", labeldistance="0.50", penwidth="0.50"];
	2 [color="#ee6a03", fontcolor="#ffffff", fontsize="10.00", label="MatOperators::MatrixOperators<double>::mat_mat_mult()\n89.09%\n(33.41%)\n1×"];
	2 -> 3 [arrowsize="0.54", color="#0c9883", fontcolor="#0c9883", fontsize="10.00", label="28.72%\n3001000001×", labeldistance="1.15", penwidth="1.15"];
	2 -> 4 [arrowsize="0.52", color="#0c968b", fontcolor="#0c968b", fontsize="10.00", label="26.95%\n3001000000×", labeldistance="1.08", penwidth="1.08"];
	3 [color="#0c9883", fontcolor="#ffffff", fontsize="10.00", label="std::vector<std::vector<double,\n std::allocator<double> >,\n std::allocator<std::vector<double, std::allocator<double> > > >::\noperator[](unsigned long)\n28.76%\n(28.76%)\n3005002001×"];
	4 [color="#0c968b", fontcolor="#ffffff", fontsize="10.00", label="std::vector<double,\n std::allocator<double> >::\noperator[](unsigned long)\n26.97%\n(26.97%)\n3003000000×"];
	5 [color="#0d3f81", fontcolor="#ffffff", fontsize="10.00", label="MatOperators::MatrixOperators<double>::fill_matrix_random()\n10.90%\n(0.00%)\n2×"];
	5 -> 6 [arrowsize="0.35", color="#0d267a", fontcolor="#0d267a", fontsize="10.00", label="5.72%\n2002000×", labeldistance="0.50", penwidth="0.50"];
	5 -> 7 [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="3.93%\n2002×", labeldistance="0.50", penwidth="0.50"];
	5 -> 9 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n2000000×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#0d267a", fontcolor="#ffffff", fontsize="10.00", label="std::vector<double, \nstd::allocator<double> >::size() const\n5.73%\n(5.73%)\n2005001×"];
	7 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="std::vector<std::vector<double,\n std::allocator<double> >, std::allocator<std::vector<double,\n std::allocator<double> > > >::size() const\n3.94%\n(3.94%)\n2004×"];
	8 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine\n<unsigned long,... >\n::operator()()\n1.19%\n(0.12%)\n4000000×"];
	8 -> 13 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.07%\n6412×", labeldistance="0.50", penwidth="0.50"];
	9 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>\n::operator()<std::mersenne_twister_engine<unsigned long, ..,> >\n(std::mersenne_twister_engine<...>&)\n1.19%\n(0.00%)\n2000000×"];
	9 -> 10 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n2000000×", labeldistance="0.50", penwidth="0.50"];
	10 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>::\noperator()<std::mersenne_twister_engine<unsigned long, ...> >\n(std::mersenne_twister_engine<unsigned long, >&,\n std::uniform_real_distribution<double>::param_type const&)\n1.19%\n(0.00%)\n2000000×"];
	10 -> 11 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n2000000×", labeldistance="0.50", penwidth="0.50"];
	11 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, >\n, double>::operator()()\n1.19%\n(0.00%)\n2000000×"];
	11 -> 12 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n2000000×", labeldistance="0.50", penwidth="0.50"];
	12 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, ..> >\n(std::mersenne_twister_engine<unsigned long, ...>&)\n1.19%\n(0.00%)\n2000000×"];
	12 -> 8 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.19%\n4000000×", labeldistance="0.50", penwidth="0.50"];
	13 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, ...>::_M_gen_rand()\n1.07%\n(1.07%)\n6412×"];
}
