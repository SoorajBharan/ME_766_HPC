digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#ff0300", fontcolor="#ffffff", fontsize="10.00", label="main\n99.73%\n(0.00%)"];
	1 -> 2 [arrowsize="1.00", color="#ff0300", fontcolor="#ff0300", fontsize="10.00", label="99.73%\n1×", labeldistance="3.99", penwidth="3.99"];
	2 [color="#ff0300", fontcolor="#ffffff", fontsize="10.00", label="MonteCarloInt::MonteCarloIntegration<double>::run()\n99.73%\n(0.00%)\n1×"];
	2 -> 3 [arrowsize="0.97", color="#f73201", fontcolor="#f73201", fontsize="10.00", label="95.02%\n1×", labeldistance="3.80", penwidth="3.80"];
	2 -> 10 [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="3.92%\n1×", labeldistance="0.50", penwidth="0.50"];
	2 -> 20 [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.80%\n1×", labeldistance="0.50", penwidth="0.50"];
	3 [color="#f73201", fontcolor="#ffffff", fontsize="10.00", label="MonteCarloInt::MonteCarloIntegration<double>::solve()\n95.02%\n(4.52%)\n1×"];
	3 -> 4 [arrowsize="0.94", color="#ec7503", fontcolor="#ec7503", fontsize="10.00", label="87.78%\n200000000×", labeldistance="3.51", penwidth="3.51"];
	3 -> 11 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.66%\n100000000×", labeldistance="0.50", penwidth="0.50"];
	3 -> 19 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.66%\n2×", labeldistance="0.50", penwidth="0.50"];
	4 [color="#ec7503", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n87.78%\n(1.86%)\n200000000×"];
	4 -> 5 [arrowsize="0.93", color="#ea8503", fontcolor="#ea8503", fontsize="10.00", label="85.92%\n200000000×", labeldistance="3.44", penwidth="3.44"];
	5 [color="#ea8503", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)\n85.92%\n(5.44%)\n200000000×"];
	5 -> 6 [arrowsize="0.85", color="#c5d606", fontcolor="#c5d606", fontsize="10.00", label="72.91%\n200000000×", labeldistance="2.92", penwidth="2.92"];
	5 -> 13 [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.79%\n200000000×", labeldistance="0.50", penwidth="0.50"];
	5 -> 14 [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.52%\n400000000×", labeldistance="0.50", penwidth="0.50"];
	5 -> 15 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.26%\n200000000×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#c5d606", fontcolor="#ffffff", fontsize="10.00", label="std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()\n72.91%\n(3.05%)\n200000000×"];
	6 -> 7 [arrowsize="0.84", color="#a8d207", fontcolor="#a8d207", fontsize="10.00", label="69.85%\n200000000×", labeldistance="2.79", penwidth="2.79"];
	7 [color="#a8d207", fontcolor="#ffffff", fontsize="10.00", label="double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n69.85%\n(19.65%)\n200000000×"];
	7 -> 8 [arrowsize="0.66", color="#0aad33", fontcolor="#0aad33", fontsize="10.00", label="43.69%\n400000000×", labeldistance="1.75", penwidth="1.75"];
	7 -> 12 [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.92%\n200000000×", labeldistance="0.50", penwidth="0.50"];
	7 -> 16 [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.86%\n400000000×", labeldistance="0.50", penwidth="0.50"];
	7 -> 17 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.73%\n200000000×", labeldistance="0.50", penwidth="0.50"];
	8 [color="#0aad33", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()\n43.69%\n(13.94%)\n400000000×"];
	8 -> 9 [arrowsize="0.55", color="#0c9a7f", fontcolor="#0c9a7f", fontsize="10.00", label="29.75%\n641026×", labeldistance="1.19", penwidth="1.19"];
	9 [color="#0c9a7f", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()\n29.75%\n(29.75%)\n641026×"];
	10 [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="MonteCarloInt::MonteCarloIntegration<double>::max_min()\n3.92%\n(2.26%)\n1×"];
	10 -> 11 [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.66%\n100000001×", labeldistance="0.50", penwidth="0.50"];
	11 [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="double MonteCarloInt::value_function<double>(double)\n3.32%\n(3.32%)\n200000001×"];
	12 [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)\n2.92%\n(2.92%)\n200000000×"];
	13 [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="std::uniform_real_distribution<double>::param_type::b() const\n2.79%\n(2.79%)\n200000000×"];
	14 [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="std::uniform_real_distribution<double>::param_type::a() const\n2.52%\n(2.52%)\n400000000×"];
	15 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n2.26%\n(2.26%)\n200000000×"];
	16 [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()\n1.86%\n(1.86%)\n400000000×"];
	17 [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)\n1.73%\n(1.73%)\n200000000×"];
	18 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::uniform_real_distribution<double>::param_type::param_type(double, double)\n0.66%\n(0.66%)\n2×"];
	19 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="std::uniform_real_distribution<double>::uniform_real_distribution(double, double)\n0.66%\n(0.00%)\n2×"];
	19 -> 18 [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.66%\n2×", labeldistance="0.50", penwidth="0.50"];
	20 [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="MonteCarloInt::MonteCarloIntegration<double>::print_results() const\n0.80%\n(0.40%)\n1×"];
}
